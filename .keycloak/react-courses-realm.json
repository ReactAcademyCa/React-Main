{
  "id": "b9aac904-c6d0-45e2-b4a3-99c067e25e68",
  "realm": "react-courses",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "841981d6-8afa-45f4-becf-c35b1e67f8cc",
        "name": "default-roles-react-courses",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "b9aac904-c6d0-45e2-b4a3-99c067e25e68",
        "attributes": {}
      },
      {
        "id": "31e00616-c9e8-40dd-a502-bfc9c4460b82",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "b9aac904-c6d0-45e2-b4a3-99c067e25e68",
        "attributes": {}
      },
      {
        "id": "4d8a81ad-21d6-4238-999b-c7f6fcb7dba0",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "b9aac904-c6d0-45e2-b4a3-99c067e25e68",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "49cdc3f8-f3c6-4d31-81dc-8f28bd5bcd90",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "f9b01c75-08fa-4f64-a07f-39e6551de70a",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "ce46e91a-9512-4f4d-a34e-6ea3673fd952",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "d4977f8b-5f7f-4e2d-b481-4dc716bd2773",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "query-users",
                "manage-events",
                "view-realm",
                "view-authorization",
                "impersonation",
                "query-realms",
                "manage-users",
                "view-events",
                "manage-realm",
                "query-clients",
                "view-identity-providers",
                "view-clients",
                "manage-identity-providers",
                "query-groups",
                "manage-clients",
                "view-users",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "762c2fea-57dd-4fd9-bb1a-73e815da4af8",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "d247b607-b418-4b44-84e4-33f32e06380f",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "751c926e-d8ed-4eaa-b646-d085aae5fc90",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "73df5223-ccda-4122-b0f0-6d1ef539667f",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "4c9cfa9e-35b8-4727-a804-bb3d14130f5c",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "cc955881-5b00-4459-b5eb-c5438b74ac35",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "3ebf769c-be96-459b-ae89-f50f00fa06a0",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "d254de04-c80f-4055-927a-dc285a99882b",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "b6c5b0e0-33cc-4bbd-a509-7cf966d6bad8",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "736c0f22-c4d9-4896-8d80-d0872309448e",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "4d5c53df-612c-454c-be38-1b11cc0144e7",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "b4804b49-a9c1-420b-819b-55ab4c4b4b0e",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "4f7c3b28-1dbc-4c10-94fe-c47867291c74",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "612063f8-e813-441e-82e0-e2a0df206f2c",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        },
        {
          "id": "753fd165-fb66-4487-ab0d-3c8704ec7e77",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "6271b201-b39f-4486-a6f2-62863e059f47",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "august-course": [
        {
          "id": "7abd3334-4d97-4358-a5ff-0978a8893c29",
          "name": "app-admin",
          "composite": false,
          "clientRole": true,
          "containerId": "7f36bcd2-da09-460d-862b-93ba7a744890",
          "attributes": {}
        },
        {
          "id": "d5f981c0-64ce-48da-a172-5015e474617f",
          "name": "app-user",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "7f36bcd2-da09-460d-862b-93ba7a744890",
          "attributes": {}
        }
      ],
      "account-console": [],
      "broker": [
        {
          "id": "6653bc4f-7df6-418e-a851-85924f57b614",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "947e28af-5ef4-4496-bf5a-6fcb2b5f1a81",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "c7711ff1-cb52-47cf-b50b-bcea438a3842",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "224183d9-51df-40cd-883a-058e650602fe",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "b846ad38-6dd7-4767-8644-bb41abe61444",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "bfebdebb-f69a-4269-a037-8e9be825b4f4",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "1f943c42-70bb-442e-941d-807e5824fda7",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "396d185d-0c69-46e0-a006-b804b373e7c8",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        },
        {
          "id": "27710bc3-e539-40df-a3f9-64c305932659",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "841981d6-8afa-45f4-becf-c35b1e67f8cc",
    "name": "default-roles-react-courses",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "b9aac904-c6d0-45e2-b4a3-99c067e25e68"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "01c4e5d6-13b6-4b2b-876b-b2653ce00d8d",
      "createdTimestamp": 1665520365355,
      "username": "emp1",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Employee",
      "lastName": "One",
      "email": "emp1@test.com",
      "credentials": [
        {
          "id": "3ae82392-a23a-4698-8cc9-6944a7a322f9",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1665521155037,
          "value": "easypassword"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-react-courses"],
      "clientRoles": {
        "august-course": ["app-user"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "c43ab45f-fef0-4e05-9908-cb67b73d8667",
      "createdTimestamp": 1665520400499,
      "username": "emp2",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Employee",
      "lastName": "Two",
      "email": "emp2@test.com",
      "credentials": [
        {
          "id": "e8e544c9-e755-4350-9d1c-80fb8e4f5292",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1665521271071,
          "value": "easypassword"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-react-courses"],
      "clientRoles": {
        "august-course": ["app-user"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d9ae4edb-39c1-4dea-a022-d387ead6f107",
      "createdTimestamp": 1665520431030,
      "username": "emp3",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Employee",
      "lastName": "Three",
      "email": "emp3@test.com",
      "credentials": [
        {
          "id": "b398cafd-d2ed-4cc0-bc0f-425cc67606eb",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1665521213015,
          "value": "easypassword"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-react-courses"],
      "clientRoles": {
        "august-course": ["app-admin", "app-user"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account"]
      }
    ]
  },
  "clients": [
    {
      "id": "8aae0b1d-3a94-4b6b-be57-df21e819486c",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/react-courses/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/react-courses/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ff724afa-96e7-46e2-8268-948bf3fe22da",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/react-courses/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/react-courses/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "9e686431-9c9b-4c35-9149-b5123635d175",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0fb60ffa-8c4f-4200-bafd-08d30cb584d3",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7f36bcd2-da09-460d-862b-93ba7a744890",
      "clientId": "august-course",
      "name": "React November course",
      "description": "",
      "rootUrl": "https://keycloak2.reactacademy.live/",
      "adminUrl": "http://localhost:3000/",
      "baseUrl": "http://localhost:3000/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:3000/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:3000/*",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "947e28af-5ef4-4496-bf5a-6fcb2b5f1a81",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6271b201-b39f-4486-a6f2-62863e059f47",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "04b82b3e-7bc0-4ca5-9d6b-257fe517d79a",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/react-courses/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/react-courses/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3502f119-3eb3-4a2a-9e66-0a5e9f48c76c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "9b478894-ac8e-4a75-9d1f-7ed5637adcfb",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "56e033ee-6670-4abf-b7a9-e14ab2d311d2",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a511f7af-52a1-4896-8de3-0255b96c3139",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "38f40910-94bf-4116-be5a-46ac9aa904b6",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "22b07709-6a11-4e9d-a607-8fd87afa09c7",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "b13f8b35-da94-4722-a35a-a10c011ac9c8",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "846dd4b8-4b4d-477f-aee2-b3e03511f3ee",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "ea6b12b6-0c71-4bf4-8752-a86d009b1811",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3fc0d665-8133-40aa-acba-52eee6d13f08",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "85872f11-2b82-4b9b-885d-9e8a7b35f60d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "80ba7b04-8650-495c-b643-1a5293e59f8a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "a2a135a2-ff76-44cf-a0d1-104f62d0f1e3",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "90a6dc47-707b-4174-b864-dbb8a5a73d0f",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "069d641d-5ee6-4809-b7d7-4166e80425cf",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3c392608-c8d1-4eac-9cad-f7506f6aefb8",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "041b170d-cd36-4286-87a1-5fe08a24ab51",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0e3bde27-6a2a-4294-b99d-dffe9ec70a71",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "33d0ab5e-0d56-40c1-93c3-93aa0f22fd81",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "455306ec-2a04-4cac-948b-c59962547a93",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "2e7b9bdd-0463-438c-8090-467106d86979",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "872881c3-2022-4635-b724-06e6a02875f6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0fd2f3e9-b0b3-4bac-9b1f-980ecfca87ab",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f77ae2b-bab0-4e53-9d72-e7b6fb07f408",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "80b8486a-8949-42e4-a7a9-096c99daf493",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3846f4f-a415-4a06-84c7-5e7261da5a2d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "4cfa2c37-bccd-4057-9006-c1de7b9a5f05",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b6f4a00-aa3a-4c2b-b107-f02e6319c055",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3f925664-340e-40f2-a257-53cb8c802476",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "767d637d-08bc-41b0-ba2c-d44ae2191cdf",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "8ca42f91-a755-4f61-899d-f6d2880e0b35",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3aa74a80-eb29-4839-a36a-09c8e19497f0",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "b4ef1105-9896-4246-a93e-d170d413f668",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dd0bf873-0f82-4135-aaaa-e27670b5192e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0024b611-a75a-423e-9a07-57bf96382f26",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "1445c34d-81c6-44cc-b0c5-67305baa3cd1",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "fb96c2aa-07c4-4b30-9b10-0bdf607f4844",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "95b0da21-dc6d-4f23-99fc-7f9d012d2ee0",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "ed722f08-7923-45e3-ad1b-6e025eeec488",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "0530b9cf-1524-45f8-869d-d939fa6f110d",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "be2b260b-9187-46da-b3f0-ac8df3017171",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "a4cede63-c163-41cc-ae1c-b96a5977d5bd",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "c64551c7-0af7-4f47-b660-19c6c5bf68b7",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "b23342a7-e10e-4f2d-80ea-8e5c7e8e978c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "70c95113-1284-4acb-9df9-f06f010cabcb",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "3c4e252e-09f2-4f92-884d-d93fea441ad7",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "67326620-df79-4d19-ae92-d7a910fb13fc",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEA30AccChARCqfnzYFMPpewdM0YbRTopJT6JJ28dQPxihKrAUwP47hW3wJ3/owsO/QVlq7V4WHntKx7VGwQOUwe1bp3My3Xqx0huo3FLQBGZqYfJ/tuxxyu2LsFWBCWEJvHZYCpCkSkDRIhRRH2azyGhHkuVGHS+nj3wlxh4Zxqh1MvWNMcxgRuwEJqp0rrX5GZyGMv0CR1p6iFDe4mTLTYVIpkyKxYpvnQYPtvNIvgr6en/LUA0L0kH+YfQXdlMjhAjI3d7+TeeriLZ4Ls/YdK28lgSwp6ZX6CtqoUQGxe6ZinTzbuzwIZK9wXld9BfnYl4WY30xuYjVzV3/s9aJZ9QIDAQABAoH/G1MS0qdv4OgBTCX7J1jS6uZELbE54KwIQ8RUH+/UqRbwDMiVydxduNTLC0mUAWlYwTkEX7H4PM2M+X8GE5X5rnRKK2bjCrNmOnJwS228tLrh7wmkD0LBctiot0pmKbyih6cqAO2wrUsOP+Y7j75F45WiaQw8LbkdgC79C5lo+r5gvIW6HbN/eahLc/fZbfsDbtoUYlS21u6CU6ZMb0ebtJMXXjrnOIBaeMGhbYqb/sBkXOhFhZwXlPwIfZIhqzYNkkkr1QEPx8+3KsLV109PLREKYldOwVL+q5Kyq27EhjQXMynjjM38zXZr7NnPJyOtZC70QOo67x0dJ5YpPAd5AoGBAPn0uQzJ2rAKPp5MjgGhUZgWcyD2ZqUIZ+Fdfru0pmWg7Xks3K1jth2SH/UuXuMk38ci7iSL4qSRelbQA3b+3M5ZDzJCl8LIO+gYvy7hl4gqHboh0PcInnQClWVr5Gq5Dvhmp9vgkwOXwOGQxAlINvW/H7fuxIY1nwunP3+J1GXXAoGBAOSmE2YFD4OnUep3JTRqKQ+z0xVuWR8oQYVpK7VlRUUFtVRFsLw6Ovgz8MCVNxQ89umd+g4AhCWULodTpitvt+CxQxSVw+r2zlQhUTnx3VqRT6ZUEXYtgbyLzSWtlEGqUQeZRUu5wpWgZ0eMtk2VVJ0lyouqysNHvCQiW84zyC0TAoGAePW/83tflB9xDCQZ+Jn7pXD/x+zV4Xl+4+Xd5bJXcAj/wss+A76kLA1B3+HP03ZNwM2blx4G0QMBxC8n7hcJ/eXFX9owHPfPXdNT+bj8Hs3a0u94c4O9QoDZkVo0EJ17rCPpiZNVMcDne4EWDTPgPO5/yAAJJLWgQQBvzyWBHsMCgYBUf/vTTDN7mC5x1C5vvHwITZDI7ssI9LuiLkf09cQvyfhFeKvkJDD+4VMsGPkOBanKlJOA8TflG2pGoOdcTiFKbLg5t098WlHOTbHTFEuV2PXypkb9wbucjp32Orv7uJHRmRc+8Ru0aF9C1gHZkkJ/ASRlkWz11mD1ia0b+48S+QKBgQDTf9s0v+sxp2IPenHcL/fPljPHJ69lQGc/PyP02E3uLjQ9KXQVzSOUqazOu+0m58zUzXv4r2Dsnmh6bxDuYbjsAah7g/Tvj2I4fk3DWeAsGDRHYl2A/FjIkXCCjmz05hiTmbkgl8UNyRhB/C2rFnABD5qisxZXRXemmRNMQp7/6w=="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICqTCCAZECBgGDyLbdGzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1yZWFjdC1jb3Vyc2VzMB4XDTIyMTAxMTIwMjExMFoXDTMyMTAxMTIwMjI1MFowGDEWMBQGA1UEAwwNcmVhY3QtY291cnNlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN9AHHAoQEQqn582BTD6XsHTNGG0U6KSU+iSdvHUD8YoSqwFMD+O4Vt8Cd/6MLDv0FZau1eFh57Sse1RsEDlMHtW6dzMt16sdIbqNxS0ARmamHyf7bsccrti7BVgQlhCbx2WAqQpEpA0SIUUR9ms8hoR5LlRh0vp498JcYeGcaodTL1jTHMYEbsBCaqdK61+RmchjL9AkdaeohQ3uJky02FSKZMisWKb50GD7bzSL4K+np/y1ANC9JB/mH0F3ZTI4QIyN3e/k3nq4i2eC7P2HStvJYEsKemV+graqFEBsXumYp0827s8CGSvcF5XfQX52JeFmN9MbmI1c1d/7PWiWfUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAj8hdF9dmj+gydvkKdxMgJNIGaVbHHOOOSRtgBnq3+tkkK5CFdHMuFuDxN6C48UMNuXyMoMplf5YrkNgQdANBdz5JNzhVOX9VeAQzzVMIDxrbXIF+o5t6kEPGPGddw0JuVPsuBAuZQbEl0xIKFzqrw+nltilXLv+5oo+sMjaVQwh8azw7H2fUHuqWkF4t9T5zVgsWLdvuckGjwXNdwn2ZmT4LWKnd9Uke3rt3qwcmFRYtKUuKAHVon3zE3xa/A1UljaB28IrYzapOxgWG3U1d2OJ0f8ttTinBgxSYqYgDM1HqA0lsllH4YFNc3eRhj0qcS88FWdNBcKPMVcL6nRG4rQ=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "bcf64a2f-2e43-4ab6-9967-d57ac749f9ee",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["0b02d2ea-456b-4530-be8c-934ab24f48e3"],
          "secret": [
            "0HGtc1IQzX5k6K2Wqaoy9bgZXNVbxCtZEFVnk1CnkjC3kfc7dLN8lEj8aeFL44soVfeoJvrEj8bTfGDuJHU6cg"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "id": "34f51572-30e9-45c0-9768-0b67ad12e9df",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEAlgE18nhFEu2S2b4O5GXq4Wk1d1YxSnhmFHwt9F77gCgqEZkeNNWSghBYwybyNuisIDsFwccJzaOQjUj9Trq51S0u6EtKtXlhNd5R8GjIkj7aUJ30bsruGwISt8EAbNhxdDq8ODNuDpM0ONENDFuPgivLHcBAFSeap4MviW2qmPZv4DXdUVUbK/1/zM2VuURM+8xzEa92BbZhHZJM49r4nIi4aprtXIW+KDs301P35WY7CXIO4tebaX2voPt7jIFhVCOaoQyTeM+eO6Co0IJggQqOj6M/2vfW7ipBxRHmw76fOjlpm8SMj7eMtHKyJxGpskliF5VG01it69sKm+7XgwIDAQABAoH/Y8lqZpVoKq9GgV/T7rXd1xWl+6N0jS9Xha98fC2AIQ3KIbegrVHMcVMIH5cVvT4K3JkzuzSTaoWxVrHqnSgz3YJ9/qNKwtSvVkAO28U/QaP0lxLjCAQqLgB/2Yo918QkgeCQu58UfgQIbJA+aq1K480+N9ksYbMQe17jJwjmwKaROpuOL1SbdBviGp314C1LnLhT9ps60i6HVJ+gTjx3oG+iFt11bhLy9L6/0pDMVmqGrq1GKN6GvaxYI8czNIfdYCbOeqhKSemwZtX2vm3osx7fISXHDxRS6ADgT4FWUtA3vtlz+ZOqNRfwj+px6IHmhIRZ1ymppGQAgrpvr9y9AoGBAMaL8WxR+YsQoK2lI1SiYBHca0XZPwbj0GjbexLDPrAR00w/ZdoksUtrvh14VLX7SOAio47BsUzZM5qXVU6pTGQOuRpqFo8TKPi/w9ko4GjSJ702uzh1FZG2/ITkxNet3M8lQHvgV5RB00FhjW1jaD9WYREliBw06TSX8WdjsHctAoGBAMFpWakURhQdSuCRCoOxhITME9mqe5GD5D3W1P/omLdit7zaowoOSqIxct96Pek4HFuBVY5a9XkW+rvgbUsgpJL7u7O6srf2tULZoG7gnYdZKE9kmk0jWwFxAxKKCyVKRNBLSc36Nz6t3EGeky56+iA2TO3yVN2la6ZFvJ7WYrdvAoGBALKeTXiEmvpX4CW3zfwjBEitQriZBBGfu+vJoIQ1sFzX/H64/lls7y+J44RBr/vz8BDsOLaCXI5lTP6DrNRSjI3rjO1NibP3qcF3S6s/EfxbLDMWXQIim1/2/mBUKx5ZpK+atNN89W1Edth3+bLyXmO0wyiY2kV9+Fs/Yob/8U6VAoGAD/B3tCh4kgXL+u/ZFvtVOYB8Dk8vedGNyM7gpOptU4euLsEx+I0u92jt158CZSr7o0roWyAB5OXQ6hTXzP42sepPEMPNIL4TOBwpTZnzQYlGeiyHTt4gDOFcaHW572vMegIKZhA950t6wGmqJYV7AZaYBnAXMGEGmyBaKBjw778CgYBQmuM/6wZ/UQ0UGY7rSSCZ2mUaZSgj7zQ9gxEZ7PdQcHQa91Wg7xSmp4EYYG/XgtZzL18Yr5eOBC+0n82rDZSDIHONVNsUKyg7af98FuhgV+N/xbO/KOg8Doa/ww6v0baRbwfDX+R3XrvxpmkIFWDIlXnd5A4/6sNi+jLPfu2wSg=="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICqTCCAZECBgGDyLbZ6zANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1yZWFjdC1jb3Vyc2VzMB4XDTIyMTAxMTIwMjExMFoXDTMyMTAxMTIwMjI1MFowGDEWMBQGA1UEAwwNcmVhY3QtY291cnNlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJYBNfJ4RRLtktm+DuRl6uFpNXdWMUp4ZhR8LfRe+4AoKhGZHjTVkoIQWMMm8jborCA7BcHHCc2jkI1I/U66udUtLuhLSrV5YTXeUfBoyJI+2lCd9G7K7hsCErfBAGzYcXQ6vDgzbg6TNDjRDQxbj4Iryx3AQBUnmqeDL4ltqpj2b+A13VFVGyv9f8zNlblETPvMcxGvdgW2YR2STOPa+JyIuGqa7VyFvig7N9NT9+VmOwlyDuLXm2l9r6D7e4yBYVQjmqEMk3jPnjugqNCCYIEKjo+jP9r31u4qQcUR5sO+nzo5aZvEjI+3jLRysicRqbJJYheVRtNYrevbCpvu14MCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAA7WhvuPzy5WAcAt3T5KA0UoLaInjciRsoD/bzXHyTeTh9O65i+qrP0UCoqK4KGdMAeBodSW6pVntp4KCcUi3QklzfvoE6OOc2ijLdv3H61G22CipnVXPk8PEM/Cr15vqwLjY4R/2dMXOOQxjHWPqCsmswgusG7akNRehJv+AuRU/PWJ6jG9shkL/8/dq8RgrCw6YDD2Ih5V4gvGV73FeOD/y5UbZHEXaX69ejkH7dZTp2NQd9j0R7k4CFri63XEcwdjW84isLRX/PF5rnNoyXW6NJQRaJQDRNEGSHiqrdxnvz/clgAco4/Iswp9bmq5S95sSdy+O72Vq48UsdhSH+w=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "4f1e481e-c1ae-43c8-a4b7-792f48f6b3fa",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["18ca9626-8df1-4842-aafc-58546cdecf8e"],
          "secret": ["d-khTBCmx2w93i7Xzfscow"],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "988e082b-7a54-4f61-a9fc-27d3838d29c6",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "48446b7c-4ce8-4613-8383-48394ff8d09a",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c3d44d03-64e2-4e0a-9045-fd572f100f9b",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cbbeb3dc-17ab-47fc-80fb-ff066667bdce",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0ef1eecf-13ed-47d9-a2a9-bba689bbd65d",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "17ec1efe-642c-4c96-8e04-4c90a4c5c122",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d66683ca-df69-4ca8-ad7c-34dbe9d76c2b",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "84366bab-3d73-422f-9cc3-4d4e60f8c8f2",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "db6746ad-b99d-447e-a8dd-167a8b1892ce",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d5432a81-15ef-4172-b8eb-1cd78f2a67cd",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d87ddd4-113c-43cd-9084-c646c99694ce",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "310f6e80-c0b9-42d8-b0e3-53830c09b28d",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "11affd7e-0f04-4d58-98bd-ccc6a262257e",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b5a3cfe5-24d8-48cd-979c-d4fbdc3d7fdb",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2347ae22-3467-4df7-8884-0c26f2ad4b0b",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "75ffee13-cec9-4c23-99e2-c02d61a9369e",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8877d4d4-7d4a-4b9a-ad73-670cd2994570",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "13e4f724-788c-4373-86a8-fa3488129f8c",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "08151865-672b-4609-929c-3677a2077a32",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a62a2324-7694-4802-8430-c2418c28ccdb",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "2531e381-5c5b-4ad2-8bd3-6c56d0272b1a",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "c8987662-0bca-47d1-bb52-b99cb45f0128",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "19.0.3",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
