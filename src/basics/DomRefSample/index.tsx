import { useState, createRef, RefObject, useId } from 'react';
import { Form, Button } from 'react-bootstrap';
import InnerInput from './InputOldInnerRef';
import ForwardInput from './InputWithRef';

export default function RefSample() {
  const [theState, setTheState] = useState<string>('Controlled component');
  const ref1: RefObject<HTMLInputElement> = createRef();
  const ref2: RefObject<HTMLInputElement> = createRef();
  const ref3: RefObject<HTMLInputElement> = createRef();
  const ref4: RefObject<HTMLInputElement> = createRef();
  const id: string = useId();
  //console.log(id);

  return (
    <>
      <h1>Working with DOM References</h1>
      <p>A reference can be used to access the DOM generated by a render.</p>
      <div>
        <h4>Using State on a "controlled component"</h4>
        <Form.Control
          type='text'
          value={theState}
          onChange={(evt) => setTheState(evt.target.value)}
        />
        <Button
          onClick={() => alert(theState)}
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>

      <div>
        <h4>Using id on an uncontrolled component</h4>
        <input
          type='text'
          className='form-control'
          id='id1'
          //Every id should be unique on a page. Is that the case?
          //Problem: React cannot easily ensure that ids are unique.
          //Solution: useID() was added to React 18+
          defaultValue='get component by id'
        />
        <Button
          onClick={() =>
            alert((document.getElementById('id1') as HTMLInputElement).value)
          }
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>

      <div>
        <h4>Using Reference</h4>
        <input
          type='text'
          className='form-control'
          ref={ref1}
          defaultValue='Using reference'
        />
        <Button
          onClick={() => alert(ref1.current?.value)}
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>

      <div>
        <h4>Broken Reference</h4>
        <input
          type='text'
          className='form-control'
          ref={ref2}
          defaultValue='Using reference2'
        />
        <Button
          onClick={() => alert('This must be fixed')}
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>

      <div>
        <h4>Using inner Reference (old way)</h4>
        <InnerInput innerRef={ref3} defaultValue='Using innerRef (old way)' />
        <Button
          onClick={() => alert(ref3.current?.value)}
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>

      <div>
        <h4>Using Forwarding Reference (new way)</h4>
        <ForwardInput ref={ref4} defaultValue='using forwardRef()' />
        <Button
          onClick={() => alert(ref4.current?.value)}
          variant='primary'
          className='mt-2 mb-4'
        >
          Show value
        </Button>
      </div>
    </>
  );
}
